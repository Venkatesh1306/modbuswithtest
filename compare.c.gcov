        -:    0:Source:D:/Project_mp/testfinal/test/compare.c
        -:    0:Programs:11
        -:    1:#include "testhead.h"
        -:    2:
        -:    3:// function for testing the output with the expected output
       12:    4:unsigned short int Test_ing(const unsigned char ModbusTcpTxBuf[], const unsigned char Test_TX[])
        -:    5:{
       12:    6:    Test_Res = 1;
       12:    7:    test_c = 0;
        -:    8:
        -:    9:    // Data enter check for FC 0x06
       12:   10:    if (ModbusTcpRxBuf[7] == 0x06)
        -:   11:    {
        4:   12:        add = (ModbusTcpRxBuf[8] << 8) | ModbusTcpRxBuf[9];
        4:   13:        test_c = (Dataregister[add] != ((ModbusTcpRxBuf[10] << 8) | ModbusTcpRxBuf[11])) ? 1 : 0;
        -:   14:    }
        -:   15:
        -:   16:    // Data enter check for FC  0x10
       12:   17:    if (ModbusTcpRxBuf[7] == 0x10)
        -:   18:    {
        4:   19:        add = (ModbusTcpRxBuf[8] << 8) | ModbusTcpRxBuf[9];
        4:   20:        numRegisters = (ModbusTcpRxBuf[10] << 8) | ModbusTcpRxBuf[11];
        -:   21:
       13:   22:        for (increment = 0; increment < numRegisters; increment++)
        -:   23:        {
        9:   24:            receivedData = (ModbusTcpRxBuf[13 + increment * 2] << 8) | ModbusTcpRxBuf[14 + increment * 2];
        9:   25:            test_c = (Dataregister[add + increment] != receivedData) ? 1 : 0;
        -:   26:        }
        -:   27:    }
        -:   28:
       12:   29:    if (ModbusTcpRxBuf[7] == 0x05)
        -:   30:    {
    #####:   31:        int reg = (ModbusTcpRxBuf[9] - 1) / 16;
    #####:   32:        int bit = (ModbusTcpRxBuf[9] - 1) % 16;
        -:   33:
    #####:   34:        if (ModbusTcpRxBuf[10] == 0xff)
        -:   35:        {
    #####:   36:            SET(regis[reg], bit);
        -:   37:        }
        -:   38:        else
        -:   39:        {
    #####:   40:            CLR(regis[reg], bit);
        -:   41:        }
    #####:   42:        test_c = (COIL[reg] != regis[reg]) ? 1:0;
        -:   43:    }
        -:   44:
       12:   45:    numRegisters = (ModbusTcpTxBuf[7] < 0x80) ? (0x08 + ModbusTcpTxBuf[8]) : 0x09;
        -:   46:    // send packet check for all function code
      123:   47:    for (increment = 0; increment < numRegisters; increment++)
        -:   48:    {
      111:   49:        Test_Res = (ModbusTcpTxBuf[increment] != Test_TX[increment]) ? 0 : 1;
        -:   50:    }
        -:   51:
       12:   52:    return Test_Res;
        -:   53:}
