        -:    0:Source:D:/Project_mp/testfinal/test/test.c
        -:    0:Programs:14
        -:    1:/*
        -:    2: * File:   test.c
        -:    3: * Author: Green2
        -:    4: *
        -:    5: * Created on 9 April, 2024, 11:13 AM
        -:    6: * developed for testing the inputs
        -:    7: */
        -:    8:
        -:    9:#include "testhead.h"
        -:   10:// recived packet frame
        -:   11:unsigned char ModbusTcpRxBuftest[INR_SIZE][100] = {
        -:   12:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},
        -:   13:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x09, 0x00, 0x03},
        -:   14:    //{0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02, 0x04, 0x03, 0x04, 0x3c, 0x7e},
        -:   15:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x09, 0x00, 0x07, 0x00, 0x06},
        -:   16:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x28, 0x00, 0x03},
        -:   17:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x27, 0x00, 0x06},
        -:   18:    //{0x0e, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x01, 0x00, 0x03},
        -:   19:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0xff, 0xff},
        -:   20:    //{0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x0C, 0x00, 0x03, 0x06, 0xff, 0xff, 0x06, 0x05, 0x06, 0x05},
        -:   21:    //{0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x0C, 0x00, 0x03, 0x06, 0x00, 0x06, 0x06, 0x05, 0x06, 0x05},
        -:   22:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x00, 0x03, 0x00, 0x09},
        -:   23:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x03, 0xff, 0x00},
        -:   24:    //{0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x07, 0xff, 0x00},
        -:   25:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x04, 0x00, 0x06, 0x00, 0x02},
        -:   26:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x00, 0x02, 0x00, 0x02},
        -:   27:    {0x0f, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x0a, 0x02, 0xcd, 0x01}};
        -:   28:
        -:   29:unsigned char Test_TXtest[INR_SIZE][100] = {
        -:   30:    // {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},
        -:   31:    // {0xf, 0x00, 0x01, 0x00, 0x02, 0x00, 0x09, 0x03, 0x03, 0x6, 0x3c, 0x7e, 0x03, 0x02, 0xFF, 0xFF},
        -:   32:    // {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02},
        -:   33:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x89, 0x01},
        -:   34:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x83, 0x02},
        -:   35:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x86, 0x02},
        -:   36:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x90, 0x02},
        -:   37:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x86, 0x03},
        -:   38:    // {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x90, 0x03},
        -:   39:    // {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x0C, 0x00, 0x03},
        -:   40:    // {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x02, 0xE0, 0x01},
        -:   41:    // {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x03, 0xff, 0x00},
        -:   42:    // {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x07, 0xff, 0x00},
        -:   43:    {0xD, 0x00, 0x01, 0x00, 0x02, 0x00, 0x07, 0x03, 0x04, 0x4, 0x3a, 0x2b, 0x3c, 0x7e},
        -:   44:    {0x0A, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x03, 0x02, 0x01, 0x03},
        -:   45:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x0F, 0x00, 0x20, 0x00, 0x0A}};
        -:   46:
        -:   47:// Data register
        -:   48:unsigned short int Dataregister[100] = {0xff00, 0x00ff, 0x0000, 0xFFFF, 0x00ff, 0x00ff, 0x00ff, 0xff00, 0x3A2B, 0x3c7e, 0x0302, 0xFFFF, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e};
        -:   49:
        -:   50:unsigned short int InputRegister[100] = {0x000f, 0x3c7e, 0x0302, 0xFFFF, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xff00, 0x00ff, 0x0000, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xFFFF, 0x00ff, 0x00ff, 0x00ff, 0xff00, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e};
        -:   51:
        -:   52:/*
        -:   53:main function for testing
        -:   54:generates the expected frame by cosidering the ModbusTcpRxBuf
        -:   55:stores the frame in Test_TX
        -:   56:finally checks the expected and actual outputs are same
        -:   57:expected -- Test_Tx
        -:   58:*/
        2:   59:int main()
        -:   60:{
        -:   61:
        -:   62:   int j;
        -:   63:
        8:   64:   for (inc = 0; inc < INR_SIZE; inc++)
        -:   65:   {
        -:   66:
       90:   67:      for (j = 0; j <= ModbusTcpRxBuftest[inc][0]; j++)
        -:   68:      {
       84:   69:         ModbusTcpRxBuf[j] = ModbusTcpRxBuftest[inc][j + 1];
        -:   70:      }
       82:   71:      for (j = 0; j <= Test_TXtest[inc][0]; j++)
        -:   72:      {
       76:   73:         Test_TX[j] = Test_TXtest[inc][j + 1];
        -:   74:      }
        -:   75:
        6:   76:      frame_function(&ModbusTcpRxBuf[0], &Dataregister[0], &InputRegister[0], &COIL[0], &parse, &ModbusTcpTxBuf[0], &ModbusTxLength); // main call function
        -:   77:
        6:   78:      Test_ing(ModbusTcpTxBuf, Test_TX); // comparing expected and actual frame
        -:   79:
        6:   80:      printfunction(); // printing the output
        -:   81:   }
        -:   82:}
