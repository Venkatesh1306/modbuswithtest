        -:    0:Source:D:/Project_mp/testfinal/test/test.c
        -:    0:Programs:14
        -:    1:/*
        -:    2: * File:   test.c
        -:    3: * Author: Green2
        -:    4: *
        -:    5: * Created on 9 April, 2024, 11:13 AM
        -:    6: * developed for testing the inputs
        -:    7: */
        -:    8:
        -:    9:#include "testhead.h"
        -:   10:// recived packet frame
        -:   11:unsigned char ModbusTcpRxBuftest[INR_SIZE][100] = {
        -:   12:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x09, 0x00, 0x07, 0x00, 0x06},
        -:   13:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x00, 0x03, 0x00, 0x09},
        -:   14:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x01, 0x00, 0x51, 0x00, 0x09},
        -:   15:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x00, 0x02, 0x00, 0x03},
        -:   16:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x02, 0x00, 0x56, 0x00, 0x03},
        -:   17:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x09, 0x00, 0x03},
        -:   18:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x03, 0x00, 0x28, 0x00, 0x03},
        -:   19:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x04, 0x00, 0x06, 0x00, 0x02},
        -:   20:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x04, 0x00, 0x31, 0x00, 0x02},
        -:   21:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x03, 0xff, 0x00},
        -:   22:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x53, 0xff, 0x00},
        -:   23:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x07, 0xfc, 0x00},
        -:   24:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},
        -:   25:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x27, 0x00, 0x06},
        -:   26:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x09, 0xff, 0xff},
        -:   27:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x15, 0x04, 0xcd, 0x01, 0x03, 0x02},
        -:   28:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x00, 0x55, 0x00, 0x15, 0x04, 0xcd, 0x01, 0x03, 0x02},
        -:   29:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x0B, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x15, 0x04, 0xff, 0xff, 0x03, 0x02},
        -:   30:    {0x11, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02, 0x04, 0x03, 0x04, 0x3c, 0x7e},
        -:   31:    {0x0e, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x30, 0x00, 0x01, 0x00, 0x03},
        -:   32:    {0x13, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x0C, 0x00, 0x03, 0x06, 0xff, 0xff, 0x06, 0x05, 0x06, 0x05},
        -:   33:};
        -:   34:
        -:   35:// expected frame to send
        -:   36:unsigned char Test_TXtest[INR_SIZE][100] = {
        -:   37:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x89, 0x01},                                    // Function ErrorCrt
        -:   38:    {0x0b, 0x00, 0x01, 0x00, 0x02, 0x00, 0x05, 0x03, 0x01, 0x02, 0xC0, 0x01},                        // F-01
        -:   39:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x81, 0x02},                                    // F-01 Addr Error
        -:   40:    {0x0A, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x03, 0x02, 0x01, 0x07},                              // F-02
        -:   41:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x82, 0x02},                                    // F-02 Addr Error
        -:   42:    {0x0f, 0x00, 0x01, 0x00, 0x02, 0x00, 0x09, 0x03, 0x03, 0x6, 0x3c, 0x7e, 0x03, 0x02, 0xFF, 0xFF}, // f-03
        -:   43:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x83, 0x02},                                    // F-03 Addr Error
        -:   44:    {0x0D, 0x00, 0x01, 0x00, 0x02, 0x00, 0x07, 0x03, 0x04, 0x4, 0x3a, 0x2b, 0x3c, 0x7e},             // F-04
        -:   45:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x84, 0x02},                                    // F-04 Addr Error
        -:   46:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x05, 0x00, 0x03, 0xff, 0x00},                  // F-05
        -:   47:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x85, 0x02},                                    // F-05 Addr Error
        -:   48:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x85, 0x03},                                    // F-05 Data Error
        -:   49:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x06, 0x00, 0x03, 0x03, 0x04},                  // F-06
        -:   50:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x02},                                    // F-06 Adrr Error
        -:   51:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x86, 0x03},                                    // F-06 Data Error
        -:   52:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x0F, 0x00, 0x01, 0x00, 0x20},                  // F-0F
        -:   53:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x8F, 0x02},                                    // F-0F Addr Error
        -:   54:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x8F, 0x03},                                    // F-0F Data Error
        -:   55:    {0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x06, 0x03, 0x10, 0x00, 0x06, 0x00, 0x02},                  // F-10
        -:   56:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x02},                                    // F-10 Addr Error
        -:   57:    {0x09, 0x00, 0x01, 0x00, 0x02, 0x00, 0x03, 0x03, 0x90, 0x03},                                    // F-10 Data Error
        -:   58:};
        -:   59:
        -:   60:// Data register
        -:   61:unsigned short int Dataregister[100] = {0xff00, 0x00ff, 0x0000, 0xFFFF, 0x00ff, 0x00ff, 0x00ff, 0xff00, 0x3A2B, 0x3c7e, 0x0302, 0xFFFF, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e};
        -:   62:
        -:   63:unsigned short int InputRegister[100] = {0x00ff, 0x3c7e, 0x0302, 0xFFFF, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xff00, 0x00ff, 0x0000, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0xFFFF, 0x00ff, 0x00ff, 0x00ff, 0xff00, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e, 0x0065, 0x2217, 0x1123, 0x1321, 0x3A2B, 0x3c7e};
        -:   64:
        -:   65:/*
        -:   66:main function for testing
        -:   67:generates the expected frame by cosidering the ModbusTcpRxBuf
        -:   68:stores the frame in Test_TX
        -:   69:finally checks the expected and actual outputs are same
        -:   70:expected -- Test_Tx
        -:   71:*/
        1:   72:int main()
        -:   73:{
        -:   74:
        -:   75:   int j;
       22:   76:   for (incrs = 0; incrs < INR_SIZE; incrs++)
        -:   77:   {
      323:   78:      for (j = 0; j <= ModbusTcpRxBuftest[incrs][0]; j++)
        -:   79:      {
      302:   80:         ModbusTcpRxBuf[j] = ModbusTcpRxBuftest[incrs][j + 1];
        -:   81:      }
      256:   82:      for (j = 0; j <= Test_TXtest[incrs][0]; j++)
        -:   83:      {
      235:   84:         Test_tx[j] = Test_TXtest[incrs][j + 1];
        -:   85:      }
        -:   86:
       21:   87:      frame_function(&ModbusTcpRxBuf[0], &Dataregister[0], &InputRegister[0], &COIL[0], &parse, &ModbusTcpTxBuf[0], &ModbusTxLength); // main call function
        -:   88:
       21:   89:      Test_ing(ModbusTcpTxBuf, Test_tx); // comparing expected and actual frame
        -:   90:
       21:   91:      printfunction(); // printing the output
        -:   92:   }
        -:   93:}
