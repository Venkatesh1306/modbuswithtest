        -:    0:Source:D:/Project_mp/testfinal/libModbus/holdingReg.c
        -:    0:Programs:14
        -:    1:
        -:    2:#include "ModbusTcp.h"
        -:    3:unsigned int a, b;
        -:    4:
        -:    5:
        -:    6:// ModbusTcpRxBuf
        -:    7:// ModbusTcpTxBuf
        -:    8:/*
        -:    9: Parametes
        -:   10: * ModbusPacketParser
        -:   11: * 
        -:   12: * 1.DataRegister
        -:   13: * 2.ModbusTcpRxBuf - QUERY Buffer
        -:   14: * 3.ModbusTcpTxBuf - Response Buffer
        -:   15: * 
        -:   16: * Return
        -:   17: * No of bytes to send
        -:   18: * Bit Test
        -:   19: * 
        -:   20: * 0000 1000
        -:   21: * 0001 0000
        -:   22: * ---------
        -:   23: * 0000 0000
        -:   24: * 
        -:   25: * 0001 1000
        -:   26: * 0001 0000
        -:   27: * ---------
        -:   28: * 0001 0000
        -:   29: * 
        -:   30: */
        -:   31:
        -:   32://|   dff    |
        -:   33://|          |
        -:   34://  2 bytes
        -:   35:
        -:   36://parse->TransactionID.v[0] = *DataRegister;
        -:   37://  parse->TransactionID.v[1] = *DataRegister++;
        -:   38:
        -:   39:
        -:   40:
        1:   41:uint16_t readHoldingRegisters(uint8_t *p_modbusTxBuf, uint16_t *p_dataMemory, mbPacketParse_t *p_parseModbusTcpData)
        -:   42:{
        -:   43: uint16_t length;
        -:   44: 
        -:   45:// if(p_parseModbusTcpData->numberofRegister.Val>(MaxSizeTcpTx-8))
        -:   46://   {
        -:   47://     modbusError ()
        -:   48://   }
        1:   49:  p_modbusTxBuf[0] = p_parseModbusTcpData->transactionID.v[1];
        1:   50:  p_modbusTxBuf[1] = p_parseModbusTcpData->transactionID.v[0];
        -:   51:
        1:   52:  p_modbusTxBuf[2] = p_parseModbusTcpData->protocolID.v[1];
        1:   53:  p_modbusTxBuf[3] = p_parseModbusTcpData->protocolID.v[0];
        -:   54:
        1:   55:  p_modbusTxBuf[4] = 0X0;
        -:   56: 
        -:   57:
        1:   58:  p_modbusTxBuf[6] = p_parseModbusTcpData->unitID;
        1:   59:  p_modbusTxBuf[7] = p_parseModbusTcpData->functionCode;
        1:   60:  p_modbusTxBuf[8] = p_parseModbusTcpData->numberofRegister.Val * 2;
        1:   61:  p_modbusTxBuf[5] =  p_modbusTxBuf[8]+ 0X03;
        -:   62:
        -:   63:
        -:   64:
        -:   65:
        -:   66:
        4:   67:  for (a = 0; a < p_parseModbusTcpData->numberofRegister.Val; a++)
        -:   68:    {
        3:   69:      b = a * 2;
        -:   70:
        3:   71:      p_modbusTxBuf[9 + b] = p_dataMemory[p_parseModbusTcpData->startAddress.Val + a] / 0x100;
        3:   72:      p_modbusTxBuf[10 + b] = p_dataMemory[p_parseModbusTcpData->startAddress.Val + a] % 0x100;
        -:   73:    }
        -:   74:
        1:   75:  length = 0x9 + p_modbusTxBuf[8];
        1:   76:  return length;
        -:   77:}
        -:   78:
        -:   79:
